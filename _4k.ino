#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

// Set the pins for control
#define OLED_MOSI   2
#define OLED_CLK    3
#define OLED_DC     4
#define OLED_RESET  5
#define OLED_CS     6
Adafruit_SSD1306 display(OLED_MOSI, OLED_CLK, OLED_DC, OLED_RESET, OLED_CS);

#define FOURKLOGO_HEIGHT 64
#define FOURKLOGO_WIDTH  64
// This is the actual data for the 4K logo displayed on the badge.
static const unsigned char PROGMEM FOURKLOGO [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x29, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x52, 0x40, 0x00, 0x00,
0x00, 0x00, 0x05, 0xA5, 0xA5, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x4A, 0x4A, 0x48, 0x00, 0x00,
0x00, 0x00, 0x95, 0x95, 0x95, 0x95, 0x00, 0x00, 0x00, 0x00, 0x2A, 0x2A, 0x2A, 0x2A, 0x00, 0x00,
0x00, 0x02, 0xAA, 0xAA, 0xAA, 0xAA, 0xA0, 0x00, 0x00, 0x04, 0x54, 0x54, 0x54, 0x54, 0x50, 0x00,
0x00, 0x29, 0xA9, 0xA9, 0xA9, 0xA9, 0xA8, 0x00, 0x00, 0x12, 0x52, 0x52, 0x52, 0x52, 0x50, 0x00,
0x00, 0x25, 0xA5, 0x85, 0xA5, 0x81, 0xA4, 0x00, 0x00, 0x4A, 0x4A, 0x0A, 0x48, 0x02, 0x4A, 0x00,
0x00, 0x95, 0x95, 0x15, 0x90, 0x01, 0x95, 0x80, 0x00, 0x2A, 0x2A, 0x0A, 0x28, 0x2A, 0x2A, 0x00,
0x02, 0xAA, 0xAA, 0x0A, 0xA8, 0xAA, 0xAA, 0x80, 0x00, 0x54, 0x54, 0x14, 0x50, 0x54, 0x54, 0x40,
0x01, 0xA9, 0xA8, 0x09, 0xA8, 0xA9, 0xA9, 0xA0, 0x02, 0x52, 0x50, 0x12, 0x50, 0x52, 0x52, 0x40,
0x05, 0xA5, 0xA0, 0x05, 0xA0, 0xA5, 0xA5, 0xA0, 0x0A, 0x4A, 0x48, 0x0A, 0x40, 0x4A, 0x4A, 0x40,
0x05, 0x95, 0x90, 0x05, 0x90, 0x95, 0x95, 0x90, 0x0A, 0x2A, 0x20, 0x0A, 0x20, 0x2A, 0x2A, 0x28,
0x0A, 0xAA, 0xA8, 0x0A, 0xA8, 0xAA, 0xAA, 0xA8, 0x14, 0x54, 0x50, 0x14, 0x50, 0x54, 0x54, 0x50,
0x29, 0xA9, 0xA0, 0x09, 0xA0, 0xA9, 0xA9, 0xA8, 0x12, 0x52, 0x50, 0x02, 0x50, 0x52, 0x52, 0x50,
0x25, 0xA5, 0xA0, 0x05, 0xA1, 0xA5, 0xA5, 0xA4, 0x0A, 0x4A, 0x40, 0x0A, 0x40, 0x4A, 0x4A, 0x48,
0x15, 0x95, 0x80, 0x04, 0x01, 0x95, 0x95, 0x94, 0x2A, 0x2A, 0x20, 0x08, 0x0A, 0x2A, 0x2A, 0x28,
0x2A, 0xAA, 0xA0, 0x08, 0x0A, 0xAA, 0xAA, 0xA8, 0x14, 0x54, 0x40, 0x14, 0x04, 0x54, 0x54, 0x54,
0x29, 0xA9, 0xA0, 0x09, 0xA1, 0xA9, 0xA9, 0xA8, 0x12, 0x52, 0x40, 0x02, 0x40, 0x52, 0x52, 0x50,
0x25, 0xA5, 0xA0, 0x05, 0xA0, 0xA5, 0xA5, 0xA4, 0x0A, 0x4A, 0x40, 0x0A, 0x40, 0x4A, 0x4A, 0x48,
0x15, 0x95, 0x95, 0x85, 0x90, 0x95, 0x95, 0x90, 0x0A, 0x2A, 0x2A, 0x0A, 0x20, 0x2A, 0x2A, 0x28,
0x0A, 0xAA, 0xAA, 0x8A, 0xA8, 0xAA, 0xAA, 0xA8, 0x14, 0x54, 0x54, 0x14, 0x50, 0x54, 0x54, 0x50,
0x09, 0xA9, 0xA9, 0x89, 0xA8, 0xA9, 0xA9, 0xA0, 0x02, 0x52, 0x52, 0x02, 0x50, 0x52, 0x52, 0x50,
0x05, 0xA5, 0xA5, 0x85, 0xA0, 0xA5, 0xA5, 0xA0, 0x02, 0x4A, 0x4A, 0x0A, 0x40, 0x4A, 0x4A, 0x40,
0x01, 0x95, 0x95, 0x85, 0x90, 0x95, 0x95, 0x80, 0x02, 0x2A, 0x2A, 0x0A, 0x28, 0x2A, 0x2A, 0x00,
0x00, 0xAA, 0xAA, 0x8A, 0xA8, 0x2A, 0xAA, 0x80, 0x00, 0x54, 0x54, 0x14, 0x54, 0x14, 0x54, 0x00,
0x00, 0xA9, 0xA9, 0x09, 0xA8, 0x01, 0xA9, 0x00, 0x00, 0x52, 0x52, 0x12, 0x52, 0x42, 0x52, 0x00,
0x00, 0x25, 0xA5, 0xA5, 0xA5, 0xA5, 0xA4, 0x00, 0x00, 0x0A, 0x4A, 0x4A, 0x4A, 0x4A, 0x48, 0x00,
0x00, 0x05, 0x95, 0x95, 0x95, 0x95, 0x90, 0x00, 0x00, 0x02, 0x2A, 0x2A, 0x2A, 0x2A, 0x20, 0x00,
0x00, 0x02, 0xAA, 0xAA, 0xAA, 0xAA, 0x80, 0x00, 0x00, 0x00, 0x54, 0x54, 0x54, 0x54, 0x00, 0x00,
0x00, 0x00, 0x29, 0xA9, 0xA9, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x02, 0x52, 0x52, 0x50, 0x00, 0x00,
0x00, 0x00, 0x01, 0xA5, 0xA5, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x48, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void setup()   {
  Serial.begin(9600);

  display.begin(SSD1306_SWITCHCAPVCC);
  display.clearDisplay();

  // Write the 4K logo and some info text.
  display.drawBitmap(0, 0, FOURKLOGO, FOURKLOGO_HEIGHT, FOURKLOGO_WIDTH, 1);
  writetext();

  // Write data to the display.
  display.display();

  delay(2000);
  display.clearDisplay();

  animatebitmap();
}

void loop() {

}

// Info text function.
void writetext(){
  display.setTextSize(1);
  display.setTextColor(WHITE);

  display.setCursor(64,2);
  display.println("FOUR");

  display.setCursor(64,10);
  display.println("KITCHENS");

  display.setTextColor(BLACK, WHITE);
  display.setCursor(64,18);
  display.println("#BADCAMP");

  display.setTextColor(WHITE);
  display.setCursor(64,36);
  display.println("Matt Grill");
}

// Function for looping the 4K logo and the info text.
void animatebitmap(){
  int var = 0;
  int ttimes = 0;
  int LOOPTIMES = 2;

  do {
    if (var == 128) {
      var = 0;
      ttimes++;
      if (ttimes <= LOOPTIMES){
        Serial.print(ttimes);
      }
      else {
        break;
      }
    }
    display.clearDisplay();
    if (var > FOURKLOGO_WIDTH){
      display.drawBitmap(var - 128, 0, FOURKLOGO, FOURKLOGO_HEIGHT, FOURKLOGO_WIDTH, 1);
    }
    display.drawBitmap(var, 0, FOURKLOGO, FOURKLOGO_HEIGHT, FOURKLOGO_WIDTH, 1);
    display.display();
    var++;
  } while(var <= 128 && ttimes <= LOOPTIMES);

  writetext();
  display.display();
  delay(60000);
  display.clearDisplay();
  animatebitmap();
}
